from sklearn.preprocessing import LabelEncoder
from sklearn.tree import DecisionTreeClassifier
from sklearn.tree import plot_tree

from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split,GridSearchCV,\
RandomizedSearchCV

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns


File_path = 'D:/data/data/'
File_Name = 'car_data.csv'

df = pd.read_csv(File_path + File_Name)

df.drop(columns=['User ID'],inplace=True)
encoders = []

for i in range(0,len(df.columns)- 1):
    enc = LabelEncoder()
    df.iloc[: , i] = enc.fit_transform(df.iloc[:,i])
    encoders.append(enc)
    
x = df.iloc[: , 0:5]
y = df['Purchased']

model = DecisionTreeClassifier(criterion='entropy')
model.fit(x, y)

x_pred = ['385','Male','Age','20000','No']

for i in range(0,len(df.columns) -1):
    x_pred[i] = encoders[i].transform([x_pred[i]])

x_pred_adj = np.array(x_pred).reshape(-1, 5)

y_pred = model.predict(x_pred_adj)
print('Prediction',y_pred[0])

feature = x.columns.tolist()
Data_class = y.tolist()

plt.figure(figsize=(25,20))
_=plot_tree(model,feature_names = feature,
            class_names = Data_class,
            label='all',
            impurity = True,
            precision = 3,
            filled = True,
            rounded = True,
            fontsize = 16)
plt.show()

feature_importances = model.feature_importances_
feature_names = ['User Id','Gender',
                 'Age','AnnualSalary','Purchased']

sns.set(rc={'figure.figsize':(11.7,8.27)})
sns.barplot(x = feature_importances, y = feature_names)
print(feature_importances)